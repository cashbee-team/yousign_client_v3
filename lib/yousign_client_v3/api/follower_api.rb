=begin
#Public Api v3

#Build the best experience of digital signature through your own platform. Increase your conversion rates, leverage your data and reduce your costs with Yousign API.

The version of the OpenAPI document: 3.0
Contact: contact@yousign.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0

=end

require 'cgi'

module YousignClientV3
  class FollowerApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # List the Signature Request's Followers
    # Returns a list of Followers for a given Signature Request.
    # @param signature_request_id [String] Signature Request Id
    # @param [Hash] opts the optional parameters
    # @return [GetSignatureRequestsSignatureRequestIdFollowers200Response]
    def get_signature_requests_signature_request_id_followers(signature_request_id, opts = {})
      data, _status_code, _headers = get_signature_requests_signature_request_id_followers_with_http_info(signature_request_id, opts)
      data
    end

    # List the Signature Request&#39;s Followers
    # Returns a list of Followers for a given Signature Request.
    # @param signature_request_id [String] Signature Request Id
    # @param [Hash] opts the optional parameters
    # @return [Array<(GetSignatureRequestsSignatureRequestIdFollowers200Response, Integer, Hash)>] GetSignatureRequestsSignatureRequestIdFollowers200Response data, response status code and response headers
    def get_signature_requests_signature_request_id_followers_with_http_info(signature_request_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FollowerApi.get_signature_requests_signature_request_id_followers ...'
      end
      # verify the required parameter 'signature_request_id' is set
      if @api_client.config.client_side_validation && signature_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_request_id' when calling FollowerApi.get_signature_requests_signature_request_id_followers"
      end
      # resource path
      local_var_path = '/signature_requests/{signatureRequestId}/followers'.sub('{' + 'signatureRequestId' + '}', CGI.escape(signature_request_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'GetSignatureRequestsSignatureRequestIdFollowers200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"FollowerApi.get_signature_requests_signature_request_id_followers",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FollowerApi#get_signature_requests_signature_request_id_followers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create new Followers
    # Adds a Follower to a given Signature Request.
    # @param signature_request_id [String] Signature Request Id
    # @param [Hash] opts the optional parameters
    # @option opts [Array<CreateFollowersInner>] :create_followers_inner 
    # @return [Array<Follower>]
    def post_signature_requests_signature_request_id_followers(signature_request_id, opts = {})
      data, _status_code, _headers = post_signature_requests_signature_request_id_followers_with_http_info(signature_request_id, opts)
      data
    end

    # Create new Followers
    # Adds a Follower to a given Signature Request.
    # @param signature_request_id [String] Signature Request Id
    # @param [Hash] opts the optional parameters
    # @option opts [Array<CreateFollowersInner>] :create_followers_inner 
    # @return [Array<(Array<Follower>, Integer, Hash)>] Array<Follower> data, response status code and response headers
    def post_signature_requests_signature_request_id_followers_with_http_info(signature_request_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FollowerApi.post_signature_requests_signature_request_id_followers ...'
      end
      # verify the required parameter 'signature_request_id' is set
      if @api_client.config.client_side_validation && signature_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_request_id' when calling FollowerApi.post_signature_requests_signature_request_id_followers"
      end
      # resource path
      local_var_path = '/signature_requests/{signatureRequestId}/followers'.sub('{' + 'signatureRequestId' + '}', CGI.escape(signature_request_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'create_followers_inner'])

      # return_type
      return_type = opts[:debug_return_type] || 'Array<Follower>'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"FollowerApi.post_signature_requests_signature_request_id_followers",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FollowerApi#post_signature_requests_signature_request_id_followers\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
