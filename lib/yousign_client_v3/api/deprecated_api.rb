=begin
#Public Api v3

#Build the best experience of digital signature through your own platform. Increase your conversion rates, leverage your data and reduce your costs with Yousign API.

The version of the OpenAPI document: 3.0
Contact: contact@yousign.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'cgi'

module YousignClientV3
  class DeprecatedApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # [DEPRECATED] Upload a Document
    # Deprecated endpoint, do not use.
    # @param file [File] Binary file
    # @param nature [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :insert_after_id Insert just after the position of the specified document id
    # @option opts [String] :password 
    # @option opts [String] :name The document name. If not set, will use the uploaded document name. This value should contain any characters except \\\&quot;\\\\\\\&quot;, \\\&quot;/\\\&quot; and can\\\\&#39;t start and finish with a space.
    # @option opts [InitialsArea] :initials 
    # @option opts [Boolean] :parse_anchors 
    # @return [Document]
    def post_documents(file, nature, opts = {})
      data, _status_code, _headers = post_documents_with_http_info(file, nature, opts)
      data
    end

    # [DEPRECATED] Upload a Document
    # Deprecated endpoint, do not use.
    # @param file [File] Binary file
    # @param nature [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :insert_after_id Insert just after the position of the specified document id
    # @option opts [String] :password 
    # @option opts [String] :name The document name. If not set, will use the uploaded document name. This value should contain any characters except \\\&quot;\\\\\\\&quot;, \\\&quot;/\\\&quot; and can\\\\&#39;t start and finish with a space.
    # @option opts [InitialsArea] :initials 
    # @option opts [Boolean] :parse_anchors 
    # @return [Array<(Document, Integer, Hash)>] Document data, response status code and response headers
    def post_documents_with_http_info(file, nature, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DeprecatedApi.post_documents ...'
      end
      # verify the required parameter 'file' is set
      if @api_client.config.client_side_validation && file.nil?
        fail ArgumentError, "Missing the required parameter 'file' when calling DeprecatedApi.post_documents"
      end
      # verify the required parameter 'nature' is set
      if @api_client.config.client_side_validation && nature.nil?
        fail ArgumentError, "Missing the required parameter 'nature' when calling DeprecatedApi.post_documents"
      end
      # verify enum value
      allowable_values = ["attachment", "signable_document"]
      if @api_client.config.client_side_validation && !allowable_values.include?(nature)
        fail ArgumentError, "invalid value for \"nature\", must be one of #{allowable_values}"
      end
      if @api_client.config.client_side_validation && !opts[:'name'].nil? && opts[:'name'].to_s.length > 128
        fail ArgumentError, 'invalid value for "opts[:"name"]" when calling DeprecatedApi.post_documents, the character length must be smaller than or equal to 128.'
      end

      if @api_client.config.client_side_validation && !opts[:'name'].nil? && opts[:'name'].to_s.length < 1
        fail ArgumentError, 'invalid value for "opts[:"name"]" when calling DeprecatedApi.post_documents, the character length must be great than or equal to 1.'
      end

      pattern = Regexp.new(/^(?!\s)[^\/\\]+(?<!\s)$/)
      if @api_client.config.client_side_validation && !opts[:'name'].nil? && opts[:'name'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"name\"]' when calling DeprecatedApi.post_documents, must conform to the pattern #{pattern}."
      end

      # resource path
      local_var_path = '/documents'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['multipart/form-data'])
      if !content_type.nil?
        header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['file'] = file
      form_params['nature'] = nature
      form_params['insert_after_id'] = opts[:'insert_after_id'] if !opts[:'insert_after_id'].nil?
      form_params['password'] = opts[:'password'] if !opts[:'password'].nil?
      form_params['name'] = opts[:'name'] if !opts[:'name'].nil?
      form_params['initials'] = opts[:'initials'] if !opts[:'initials'].nil?
      form_params['parse_anchors'] = opts[:'parse_anchors'] if !opts[:'parse_anchors'].nil?

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Document'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"DeprecatedApi.post_documents",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DeprecatedApi#post_documents\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
