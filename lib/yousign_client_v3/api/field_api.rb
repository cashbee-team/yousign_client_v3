=begin
#Public Api v3

#Build the best experience of digital signature through your own platform. Increase your conversion rates, leverage your data and reduce your costs with Yousign API.

The version of the OpenAPI document: 3.0
Contact: contact@yousign.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.3.0

=end

require 'cgi'

module YousignClientV3
  class FieldApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Delete a Field
    # Deletes a given Field from a Document.
    # @param signature_request_id [String] Signature Request Id
    # @param document_id [String] Document Id
    # @param field_id [String] Field Id
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_signature_requests_signature_request_id_documents_document_id_fields_field_id(signature_request_id, document_id, field_id, opts = {})
      delete_signature_requests_signature_request_id_documents_document_id_fields_field_id_with_http_info(signature_request_id, document_id, field_id, opts)
      nil
    end

    # Delete a Field
    # Deletes a given Field from a Document.
    # @param signature_request_id [String] Signature Request Id
    # @param document_id [String] Document Id
    # @param field_id [String] Field Id
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Integer, Hash)>] nil, response status code and response headers
    def delete_signature_requests_signature_request_id_documents_document_id_fields_field_id_with_http_info(signature_request_id, document_id, field_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FieldApi.delete_signature_requests_signature_request_id_documents_document_id_fields_field_id ...'
      end
      # verify the required parameter 'signature_request_id' is set
      if @api_client.config.client_side_validation && signature_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_request_id' when calling FieldApi.delete_signature_requests_signature_request_id_documents_document_id_fields_field_id"
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling FieldApi.delete_signature_requests_signature_request_id_documents_document_id_fields_field_id"
      end
      # verify the required parameter 'field_id' is set
      if @api_client.config.client_side_validation && field_id.nil?
        fail ArgumentError, "Missing the required parameter 'field_id' when calling FieldApi.delete_signature_requests_signature_request_id_documents_document_id_fields_field_id"
      end
      # resource path
      local_var_path = '/signature_requests/{signatureRequestId}/documents/{documentId}/fields/{fieldId}'.sub('{' + 'signatureRequestId' + '}', CGI.escape(signature_request_id.to_s)).sub('{' + 'documentId' + '}', CGI.escape(document_id.to_s)).sub('{' + 'fieldId' + '}', CGI.escape(field_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type]

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"FieldApi.delete_signature_requests_signature_request_id_documents_document_id_fields_field_id",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FieldApi#delete_signature_requests_signature_request_id_documents_document_id_fields_field_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Lists the Fields of a Signature Request Document.
    # Returns a list of Fields for a given Document. You can limit the number of items returned by using filters.
    # @param signature_request_id [String] Signature Request Id
    # @param document_id [String] Document ID
    # @param [Hash] opts the optional parameters
    # @option opts [Array<FieldType>] :types Filter by Field type.
    # @option opts [String] :after After cursor (pagination)
    # @option opts [Integer] :limit The limit of items count to retrieve. (default to 100)
    # @return [GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200Response]
    def get_signature_requests_signature_request_id_documents_document_id_fields(signature_request_id, document_id, opts = {})
      data, _status_code, _headers = get_signature_requests_signature_request_id_documents_document_id_fields_with_http_info(signature_request_id, document_id, opts)
      data
    end

    # Lists the Fields of a Signature Request Document.
    # Returns a list of Fields for a given Document. You can limit the number of items returned by using filters.
    # @param signature_request_id [String] Signature Request Id
    # @param document_id [String] Document ID
    # @param [Hash] opts the optional parameters
    # @option opts [Array<FieldType>] :types Filter by Field type.
    # @option opts [String] :after After cursor (pagination)
    # @option opts [Integer] :limit The limit of items count to retrieve. (default to 100)
    # @return [Array<(GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200Response, Integer, Hash)>] GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200Response data, response status code and response headers
    def get_signature_requests_signature_request_id_documents_document_id_fields_with_http_info(signature_request_id, document_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FieldApi.get_signature_requests_signature_request_id_documents_document_id_fields ...'
      end
      # verify the required parameter 'signature_request_id' is set
      if @api_client.config.client_side_validation && signature_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_request_id' when calling FieldApi.get_signature_requests_signature_request_id_documents_document_id_fields"
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling FieldApi.get_signature_requests_signature_request_id_documents_document_id_fields"
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling FieldApi.get_signature_requests_signature_request_id_documents_document_id_fields, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling FieldApi.get_signature_requests_signature_request_id_documents_document_id_fields, must be greater than or equal to 1.'
      end

      # resource path
      local_var_path = '/signature_requests/{signatureRequestId}/documents/{documentId}/fields'.sub('{' + 'signatureRequestId' + '}', CGI.escape(signature_request_id.to_s)).sub('{' + 'documentId' + '}', CGI.escape(document_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'types[]'] = @api_client.build_collection_param(opts[:'types'], :multi) if !opts[:'types'].nil?
      query_params[:'after'] = opts[:'after'] if !opts[:'after'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"FieldApi.get_signature_requests_signature_request_id_documents_document_id_fields",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FieldApi#get_signature_requests_signature_request_id_documents_document_id_fields\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a new Field on a Document
    # Adds a Field to a given Document.
    # @param signature_request_id [String] Signature Request Id
    # @param document_id [String] Document ID
    # @param [Hash] opts the optional parameters
    # @option opts [CreateField] :create_field 
    # @return [GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner]
    def post_signature_requests_signature_request_id_documents_document_id_fields(signature_request_id, document_id, opts = {})
      data, _status_code, _headers = post_signature_requests_signature_request_id_documents_document_id_fields_with_http_info(signature_request_id, document_id, opts)
      data
    end

    # Create a new Field on a Document
    # Adds a Field to a given Document.
    # @param signature_request_id [String] Signature Request Id
    # @param document_id [String] Document ID
    # @param [Hash] opts the optional parameters
    # @option opts [CreateField] :create_field 
    # @return [Array<(GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner, Integer, Hash)>] GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner data, response status code and response headers
    def post_signature_requests_signature_request_id_documents_document_id_fields_with_http_info(signature_request_id, document_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FieldApi.post_signature_requests_signature_request_id_documents_document_id_fields ...'
      end
      # verify the required parameter 'signature_request_id' is set
      if @api_client.config.client_side_validation && signature_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_request_id' when calling FieldApi.post_signature_requests_signature_request_id_documents_document_id_fields"
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling FieldApi.post_signature_requests_signature_request_id_documents_document_id_fields"
      end
      # resource path
      local_var_path = '/signature_requests/{signatureRequestId}/documents/{documentId}/fields'.sub('{' + 'signatureRequestId' + '}', CGI.escape(signature_request_id.to_s)).sub('{' + 'documentId' + '}', CGI.escape(document_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
        header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'create_field'])

      # return_type
      return_type = opts[:debug_return_type] || 'GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"FieldApi.post_signature_requests_signature_request_id_documents_document_id_fields",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FieldApi#post_signature_requests_signature_request_id_documents_document_id_fields\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a Field
    # Updates a given Field. Any parameters not provided are left unchanged.
    # @param signature_request_id [String] Signature Request Id
    # @param document_id [String] Document Id
    # @param field_id [String] Field Id
    # @param [Hash] opts the optional parameters
    # @option opts [UpdateField] :update_field 
    # @return [GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner]
    def update_signature_requests_signature_request_id_documents_document_id_fields_field_id(signature_request_id, document_id, field_id, opts = {})
      data, _status_code, _headers = update_signature_requests_signature_request_id_documents_document_id_fields_field_id_with_http_info(signature_request_id, document_id, field_id, opts)
      data
    end

    # Update a Field
    # Updates a given Field. Any parameters not provided are left unchanged.
    # @param signature_request_id [String] Signature Request Id
    # @param document_id [String] Document Id
    # @param field_id [String] Field Id
    # @param [Hash] opts the optional parameters
    # @option opts [UpdateField] :update_field 
    # @return [Array<(GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner, Integer, Hash)>] GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner data, response status code and response headers
    def update_signature_requests_signature_request_id_documents_document_id_fields_field_id_with_http_info(signature_request_id, document_id, field_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: FieldApi.update_signature_requests_signature_request_id_documents_document_id_fields_field_id ...'
      end
      # verify the required parameter 'signature_request_id' is set
      if @api_client.config.client_side_validation && signature_request_id.nil?
        fail ArgumentError, "Missing the required parameter 'signature_request_id' when calling FieldApi.update_signature_requests_signature_request_id_documents_document_id_fields_field_id"
      end
      # verify the required parameter 'document_id' is set
      if @api_client.config.client_side_validation && document_id.nil?
        fail ArgumentError, "Missing the required parameter 'document_id' when calling FieldApi.update_signature_requests_signature_request_id_documents_document_id_fields_field_id"
      end
      # verify the required parameter 'field_id' is set
      if @api_client.config.client_side_validation && field_id.nil?
        fail ArgumentError, "Missing the required parameter 'field_id' when calling FieldApi.update_signature_requests_signature_request_id_documents_document_id_fields_field_id"
      end
      # resource path
      local_var_path = '/signature_requests/{signatureRequestId}/documents/{documentId}/fields/{fieldId}'.sub('{' + 'signatureRequestId' + '}', CGI.escape(signature_request_id.to_s)).sub('{' + 'documentId' + '}', CGI.escape(document_id.to_s)).sub('{' + 'fieldId' + '}', CGI.escape(field_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
        header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(opts[:'update_field'])

      # return_type
      return_type = opts[:debug_return_type] || 'GetSignatureRequestsSignatureRequestIdDocumentsDocumentIdFields200ResponseDataInner'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"FieldApi.update_signature_requests_signature_request_id_documents_document_id_fields_field_id",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: FieldApi#update_signature_requests_signature_request_id_documents_document_id_fields_field_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
