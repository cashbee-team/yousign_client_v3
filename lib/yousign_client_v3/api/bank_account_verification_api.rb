=begin
#Public Api v3

#Build the best experience of digital signature through your own platform. Increase your conversion rates, leverage your data and reduce your costs with Yousign API.

The version of the OpenAPI document: 3.0
Contact: contact@yousign.com
Generated by: https://openapi-generator.tech
Generator version: 7.11.0

=end

require 'cgi'

module YousignClientV3
  class BankAccountVerificationApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # List Bank Account Verifications
    # Returns the list of all Bank Account Verifications within your organization.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :after After cursor (pagination)
    # @option opts [Integer] :limit The limit of items count to retrieve. (default to 100)
    # @option opts [String] :status Filter by status
    # @return [GetBankAccountVerifications200Response]
    def get_bank_account_verifications(opts = {})
      data, _status_code, _headers = get_bank_account_verifications_with_http_info(opts)
      data
    end

    # List Bank Account Verifications
    # Returns the list of all Bank Account Verifications within your organization.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :after After cursor (pagination)
    # @option opts [Integer] :limit The limit of items count to retrieve. (default to 100)
    # @option opts [String] :status Filter by status
    # @return [Array<(GetBankAccountVerifications200Response, Integer, Hash)>] GetBankAccountVerifications200Response data, response status code and response headers
    def get_bank_account_verifications_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BankAccountVerificationApi.get_bank_account_verifications ...'
      end
      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] > 100
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling BankAccountVerificationApi.get_bank_account_verifications, must be smaller than or equal to 100.'
      end

      if @api_client.config.client_side_validation && !opts[:'limit'].nil? && opts[:'limit'] < 1
        fail ArgumentError, 'invalid value for "opts[:"limit"]" when calling BankAccountVerificationApi.get_bank_account_verifications, must be greater than or equal to 1.'
      end

      allowable_values = ["pending", "approved", "declined", "inconclusive"]
      if @api_client.config.client_side_validation && opts[:'status'] && !allowable_values.include?(opts[:'status'])
        fail ArgumentError, "invalid value for \"status\", must be one of #{allowable_values}"
      end
      # resource path
      local_var_path = '/bank_account_verifications'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'after'] = opts[:'after'] if !opts[:'after'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?
      query_params[:'status'] = opts[:'status'] if !opts[:'status'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'GetBankAccountVerifications200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"BankAccountVerificationApi.get_bank_account_verifications",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BankAccountVerificationApi#get_bank_account_verifications\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve a bank account verification
    # Get the detailed results of a bank account verification.
    # @param bank_account_verification_id [String] The bank account verification ID
    # @param [Hash] opts the optional parameters
    # @return [GetBankAccountVerificationsBankAccountVerificationId200Response]
    def get_bank_account_verifications_bank_account_verification_id(bank_account_verification_id, opts = {})
      data, _status_code, _headers = get_bank_account_verifications_bank_account_verification_id_with_http_info(bank_account_verification_id, opts)
      data
    end

    # Retrieve a bank account verification
    # Get the detailed results of a bank account verification.
    # @param bank_account_verification_id [String] The bank account verification ID
    # @param [Hash] opts the optional parameters
    # @return [Array<(GetBankAccountVerificationsBankAccountVerificationId200Response, Integer, Hash)>] GetBankAccountVerificationsBankAccountVerificationId200Response data, response status code and response headers
    def get_bank_account_verifications_bank_account_verification_id_with_http_info(bank_account_verification_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BankAccountVerificationApi.get_bank_account_verifications_bank_account_verification_id ...'
      end
      # verify the required parameter 'bank_account_verification_id' is set
      if @api_client.config.client_side_validation && bank_account_verification_id.nil?
        fail ArgumentError, "Missing the required parameter 'bank_account_verification_id' when calling BankAccountVerificationApi.get_bank_account_verifications_bank_account_verification_id"
      end
      # resource path
      local_var_path = '/bank_account_verifications/{bankAccountVerificationId}'.sub('{' + 'bankAccountVerificationId' + '}', CGI.escape(bank_account_verification_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'GetBankAccountVerificationsBankAccountVerificationId200Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"BankAccountVerificationApi.get_bank_account_verifications_bank_account_verification_id",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BankAccountVerificationApi#get_bank_account_verifications_bank_account_verification_id\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Initiate a new Bank Account Verification
    # Creates a new Bank Account Verification resource.
    # @param file [File] Binary file
    # @param [Hash] opts the optional parameters
    # @option opts [String] :first_name Please provide the holder first name, exactly as it appears on the bank account document. Please match it exactly, with the same characters, same case. One exception: if the document mentions an honorary title, please don&#39;t provide it as part of the name. Ignored if field \\\&quot;legal_entity_name\\\&quot; is provided.
    # @option opts [String] :last_name Please provide the holder last name, exactly as it appears on the bank account document. Please match it exactly, with the same characters, same case. One exception: if the document mentions an honorary title, please don&#39;t provide it as part of the name. Ignored if field \\\&quot;legal_entity_name\\\&quot; is provided.
    # @option opts [String] :iban International Bank Account Number (IBAN)
    # @option opts [String] :bic Business Identifier Codes (BIC)
    # @option opts [String] :legal_entity_name Please provide the legal entity name, exactly as it appears on the bank account document. Please match it exactly, with the same characters, same case. If provided, fields \\\&quot;first_name\\\&quot; and \\\&quot;last_name\\\&quot; are ignored.
    # @return [BankAccountVerificationCreated]
    def post_bank_account_verifications(file, opts = {})
      data, _status_code, _headers = post_bank_account_verifications_with_http_info(file, opts)
      data
    end

    # Initiate a new Bank Account Verification
    # Creates a new Bank Account Verification resource.
    # @param file [File] Binary file
    # @param [Hash] opts the optional parameters
    # @option opts [String] :first_name Please provide the holder first name, exactly as it appears on the bank account document. Please match it exactly, with the same characters, same case. One exception: if the document mentions an honorary title, please don&#39;t provide it as part of the name. Ignored if field \\\&quot;legal_entity_name\\\&quot; is provided.
    # @option opts [String] :last_name Please provide the holder last name, exactly as it appears on the bank account document. Please match it exactly, with the same characters, same case. One exception: if the document mentions an honorary title, please don&#39;t provide it as part of the name. Ignored if field \\\&quot;legal_entity_name\\\&quot; is provided.
    # @option opts [String] :iban International Bank Account Number (IBAN)
    # @option opts [String] :bic Business Identifier Codes (BIC)
    # @option opts [String] :legal_entity_name Please provide the legal entity name, exactly as it appears on the bank account document. Please match it exactly, with the same characters, same case. If provided, fields \\\&quot;first_name\\\&quot; and \\\&quot;last_name\\\&quot; are ignored.
    # @return [Array<(BankAccountVerificationCreated, Integer, Hash)>] BankAccountVerificationCreated data, response status code and response headers
    def post_bank_account_verifications_with_http_info(file, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: BankAccountVerificationApi.post_bank_account_verifications ...'
      end
      # verify the required parameter 'file' is set
      if @api_client.config.client_side_validation && file.nil?
        fail ArgumentError, "Missing the required parameter 'file' when calling BankAccountVerificationApi.post_bank_account_verifications"
      end
      if @api_client.config.client_side_validation && !opts[:'first_name'].nil? && opts[:'first_name'].to_s.length > 255
        fail ArgumentError, 'invalid value for "opts[:"first_name"]" when calling BankAccountVerificationApi.post_bank_account_verifications, the character length must be smaller than or equal to 255.'
      end

      if @api_client.config.client_side_validation && !opts[:'first_name'].nil? && opts[:'first_name'].to_s.length < 1
        fail ArgumentError, 'invalid value for "opts[:"first_name"]" when calling BankAccountVerificationApi.post_bank_account_verifications, the character length must be great than or equal to 1.'
      end

      pattern = Regexp.new(/^(?!\s)[0-9A-Za-zĄÀÁÂÃÄÅÇĆÈÉÊËĘÌÍÎÏŁÑŃÒÓÔÕÖŚÙÚÛÜÝŹŻąàáâãäåæçćèéêëęìíîïłñńòóôõöśùúûüýÿźżßĀāĂăĈĉĊċČčĎďĐđĒēĔĕĖėĚěĜĝĞğĠġĢģĤĥĦħĨĩĪīĬĭĮįİıĲĳĴĵĶķĸĹĺĻļĽľĿŀŅņŇňŉŊŋŌōŎŏŐőŒœŔŕŖŗŘřŜŝŞşŠšŢţŤťŦŧŨũŪūŬŭŮůŰűŲųŴŵŶŷŸŽžſøØÆœ`\'()\- ]+(?<!\s)$/)
      if @api_client.config.client_side_validation && !opts[:'first_name'].nil? && opts[:'first_name'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"first_name\"]' when calling BankAccountVerificationApi.post_bank_account_verifications, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'last_name'].nil? && opts[:'last_name'].to_s.length > 255
        fail ArgumentError, 'invalid value for "opts[:"last_name"]" when calling BankAccountVerificationApi.post_bank_account_verifications, the character length must be smaller than or equal to 255.'
      end

      if @api_client.config.client_side_validation && !opts[:'last_name'].nil? && opts[:'last_name'].to_s.length < 1
        fail ArgumentError, 'invalid value for "opts[:"last_name"]" when calling BankAccountVerificationApi.post_bank_account_verifications, the character length must be great than or equal to 1.'
      end

      pattern = Regexp.new(/^(?!\s)[0-9A-Za-zĄÀÁÂÃÄÅÇĆÈÉÊËĘÌÍÎÏŁÑŃÒÓÔÕÖŚÙÚÛÜÝŹŻąàáâãäåæçćèéêëęìíîïłñńòóôõöśùúûüýÿźżßĀāĂăĈĉĊċČčĎďĐđĒēĔĕĖėĚěĜĝĞğĠġĢģĤĥĦħĨĩĪīĬĭĮįİıĲĳĴĵĶķĸĹĺĻļĽľĿŀŅņŇňŉŊŋŌōŎŏŐőŒœŔŕŖŗŘřŜŝŞşŠšŢţŤťŦŧŨũŪūŬŭŮůŰűŲųŴŵŶŷŸŽžſøØÆœ`\'()\- ]+(?<!\s)$/)
      if @api_client.config.client_side_validation && !opts[:'last_name'].nil? && opts[:'last_name'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"last_name\"]' when calling BankAccountVerificationApi.post_bank_account_verifications, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'iban'].nil? && opts[:'iban'].to_s.length > 34
        fail ArgumentError, 'invalid value for "opts[:"iban"]" when calling BankAccountVerificationApi.post_bank_account_verifications, the character length must be smaller than or equal to 34.'
      end

      if @api_client.config.client_side_validation && !opts[:'iban'].nil? && opts[:'iban'].to_s.length < 14
        fail ArgumentError, 'invalid value for "opts[:"iban"]" when calling BankAccountVerificationApi.post_bank_account_verifications, the character length must be great than or equal to 14.'
      end

      pattern = Regexp.new(/^([A-Z]{2}[ \-]?[0-9]{2})(?=(?:[ \-]?[A-Z0-9]){9,30}$)((?:[ \-]?[A-Z0-9]{3,5}){2,7})([ \-]?[A-Z0-9]{1,3})?$/)
      if @api_client.config.client_side_validation && !opts[:'iban'].nil? && opts[:'iban'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"iban\"]' when calling BankAccountVerificationApi.post_bank_account_verifications, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'bic'].nil? && opts[:'bic'].to_s.length > 11
        fail ArgumentError, 'invalid value for "opts[:"bic"]" when calling BankAccountVerificationApi.post_bank_account_verifications, the character length must be smaller than or equal to 11.'
      end

      if @api_client.config.client_side_validation && !opts[:'bic'].nil? && opts[:'bic'].to_s.length < 8
        fail ArgumentError, 'invalid value for "opts[:"bic"]" when calling BankAccountVerificationApi.post_bank_account_verifications, the character length must be great than or equal to 8.'
      end

      pattern = Regexp.new(/^[A-Z]{6,6}[A-Z2-9][A-NP-Z0-9]([A-Z0-9]{3,3}){0,1}$/)
      if @api_client.config.client_side_validation && !opts[:'bic'].nil? && opts[:'bic'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"bic\"]' when calling BankAccountVerificationApi.post_bank_account_verifications, must conform to the pattern #{pattern}."
      end

      if @api_client.config.client_side_validation && !opts[:'legal_entity_name'].nil? && opts[:'legal_entity_name'].to_s.length > 255
        fail ArgumentError, 'invalid value for "opts[:"legal_entity_name"]" when calling BankAccountVerificationApi.post_bank_account_verifications, the character length must be smaller than or equal to 255.'
      end

      if @api_client.config.client_side_validation && !opts[:'legal_entity_name'].nil? && opts[:'legal_entity_name'].to_s.length < 1
        fail ArgumentError, 'invalid value for "opts[:"legal_entity_name"]" when calling BankAccountVerificationApi.post_bank_account_verifications, the character length must be great than or equal to 1.'
      end

      pattern = Regexp.new(/^(?!\s)[0-9A-Za-zĄÀÁÂÃÄÅÇĆÈÉÊËĘÌÍÎÏŁÑŃÒÓÔÕÖŚÙÚÛÜÝŹŻąàáâãäåæçćèéêëęìíîïłñńòóôõöśùúûüýÿźżßĀāĂăĈĉĊċČčĎďĐđĒēĔĕĖėĚěĜĝĞğĠġĢģĤĥĦħĨĩĪīĬĭĮįİıĲĳĴĵĶķĸĹĺĻļĽľĿŀŅņŇňŉŊŋŌōŎŏŐőŒœŔŕŖŗŘřŜŝŞşŠšŢţŤťŦŧŨũŪūŬŭŮůŰűŲųŴŵŶŷŸŽžſøØÆœ`\'()\- ]+(?<!\s)$/)
      if @api_client.config.client_side_validation && !opts[:'legal_entity_name'].nil? && opts[:'legal_entity_name'] !~ pattern
        fail ArgumentError, "invalid value for 'opts[:\"legal_entity_name\"]' when calling BankAccountVerificationApi.post_bank_account_verifications, must conform to the pattern #{pattern}."
      end

      # resource path
      local_var_path = '/bank_account_verifications'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['multipart/form-data'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}
      form_params['file'] = file
      form_params['first_name'] = opts[:'first_name'] if !opts[:'first_name'].nil?
      form_params['last_name'] = opts[:'last_name'] if !opts[:'last_name'].nil?
      form_params['iban'] = opts[:'iban'] if !opts[:'iban'].nil?
      form_params['bic'] = opts[:'bic'] if !opts[:'bic'].nil?
      form_params['legal_entity_name'] = opts[:'legal_entity_name'] if !opts[:'legal_entity_name'].nil?

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'BankAccountVerificationCreated'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['bearerAuth']

      new_options = opts.merge(
        :operation => :"BankAccountVerificationApi.post_bank_account_verifications",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BankAccountVerificationApi#post_bank_account_verifications\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
